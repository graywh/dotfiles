if [[ -x $(which rbenv) ]]; then
    function rbenv {
      local command="$1"
      if [ "$#" -gt 0 ]; then
        shift
      fi

      case "$command" in
      shell)
        eval `rbenv "sh-$command" "$@"`;;
      *)
        command rbenv "$command" "$@";;
      esac
    }
fi

function __ls {
    if (( $# > 3 )); then
        echo "${argv[3]}:"
        __ls_helper "${1}" "${2}" ${argv[3]}
        for arg in ${argv[4,$#]}; do
            echo
            echo "${arg}:"
            __ls_helper "${1}" "${2}" "${arg}"
        done
    else
        __ls_helper "${1}" "${2}" "${3:-$PWD}"
    fi
}

function __ls_helper {
    eval "args=(${3}/${2})"
    if (( ${#args[@]} > 2 )); then
        (cd ${3} && eval "ls ${1} ${2}")
    fi
}

function vimh {
    vim -c "help $1 | only | bd#"
}

if [[ -f ~/.vim/plugin/manpageview.vim && $TERM != 'dumb' ]]; then
    function man {
        [[ $# -eq 0 ]] && return 1
        vim -c "Man $* | only | bd#"
    }
fi

function loop {
    while true; do
        $*
    done
}

# calc shortcut {{{1
if [[ -x $(which bc) ]]; then
    function calc {
        echo "${@}" | bc -l
    }
fi

# git ps1 stuff {{{1
function ___git_ps1 { # {{{2
    local g p
    g=$(git rev-parse --git-dir 2>/dev/null) || return
    if [[ ${g} == .git ]]; then
        __git_ps1 "$@"
    elif [[ ${g} == ~/.git ]]; then
        if [[ -f .gitignore ]]; then
            __git_ps1 "$@"
        else
            p=$(git rev-parse --show-prefix 2>/dev/null)
            case ${p} in
            (.dotfiles/*|.vim/*)
                __git_ps1 "$@"
                ;;
            esac
        fi
    else
        __git_ps1 "$@"
    fi
}

# moin current revision {{{1
function lsmoin {
    for page in ${@}; do
        [[ -f ${page}/current ]] && echo "${page}/revisions/$(cat ${page}/current)"
    done
}
function catmoin {
   for page in $(lsmoin ${@}); do
        [[ -f ${page} ]] && cat ${page}
    done
}

# change PS1 {{{1
function small_ps1 {
    PS1=$my_small_ps1
}
function big_ps1 {
    PS1=$my_big_ps1
}

# xterm title shortcut {{{1
function __xtermicontitle {
    echo -ne "\033]0;${1}\a"
}
function __xtermicon {
    echo -ne "\033]1;${1}\a"
}
function __xtermtitle {
    echo -ne "\033]2;${1}\a"
}

function __screentitle {
    echo -ne "\033k${1}\033\\"
}

# }}}1
# vim: ft=zsh fdm=marker fen
